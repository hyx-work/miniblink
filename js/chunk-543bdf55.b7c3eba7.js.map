{"version":3,"sources":["webpack:///./src/pages/Doc.vue?f42c","webpack:///./src/pages/Doc.vue?e2d8","webpack:///src/pages/Doc.vue","webpack:///./src/pages/Doc.vue?0c99","webpack:///./src/pages/Doc.vue?425f"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Doc_vue_vue_type_style_index_0_id_440ee316_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Doc_vue_vue_type_style_index_0_id_440ee316_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticClass","_l","item","index","key","class","side-bar-item-active","active","on","click","$event","_v","_s","title","_m","_e","staticStyle","color","desc","Object","keys","params","length","value","index2","tips","staticRenderFns","Docvue_type_script_lang_js_","data","sideNav","apis","created","_created","asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","sent","api","console","log","stop","apply","arguments","pages_Docvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-543bdf55.b7c3eba7.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Doc.vue?vue&type=style&index=0&id=440ee316&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Doc.vue?vue&type=style&index=0&id=440ee316&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"doc-page\"}},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"side-bar\"},[_c('div',{staticClass:\"side-bar-wrap\"},_vm._l((_vm.sideNav),function(item,index){return _c('div',{key:index,staticClass:\"side-bar-item\",class:{'side-bar-item-active': _vm.active == item.id},on:{\"click\":function($event){_vm.active = item.id}}},[_vm._v(_vm._s(item.title))])}),0)]),_c('div',{staticClass:\"body\"},[_c('div',{staticClass:\"body-wrap\"},[(_vm.active == 1)?_c('div',{staticClass:\"doc-item\"},[_c('div',{staticClass:\"doc-item-title\"},[_vm._v(\"前言\")]),_vm._m(0)]):_vm._e(),(_vm.active == 2)?_c('div',{staticClass:\"doc-item\"},[_c('div',{staticClass:\"doc-item-title\"},[_vm._v(\"Miniblink是什么\")]),_vm._m(1)]):_vm._e(),(_vm.active == 3)?_c('div',{staticClass:\"doc-item\"},[_c('div',{staticClass:\"doc-item-title\"},[_vm._v(\"API\")]),_c('div',{staticClass:\"doc-item-content\"},[_c('div',{staticClass:\"api-list\"},_vm._l((_vm.apis),function(item,index){return _c('div',{key:index,staticClass:\"api-list-item\"},[(item.del)?_c('h3',{staticStyle:{\"color\":\"#ff2400\"}},[_c('del',[_vm._v(\"[\"+_vm._s(item.id)+\"] \"+_vm._s(item.title))]),_vm._v(\" （已作废）\")]):_c('h3',[_vm._v(\"[\"+_vm._s(item.id)+\"] \"+_vm._s(item.title))]),_c('p',[_vm._v(_vm._s(item.desc ? item.desc : '暂无接口描述信息'))]),(Object.keys(item.params).length > 0)?_c('div',{staticClass:\"table params\"},[_vm._m(2,true),_vm._l((item.params),function(value,key,index2){return _c('div',{key:index2,staticClass:\"table-row\"},[_c('div',{staticClass:\"table-col\"},[_vm._v(_vm._s(key))]),_c('div',{staticClass:\"table-col\"},[_vm._v(_vm._s(value))])])})],2):_vm._e(),(item.tips)?_c('blockquote',{staticClass:\"api-tips\"},[_vm._v(_vm._s(item.tips))]):_vm._e()])}),0)])]):_vm._e(),(_vm.active == 4)?_c('div',{staticClass:\"doc-item\"},[_c('div',{staticClass:\"doc-item-title\"},[_vm._v(\"mini-electron模式\")]),_vm._m(3)]):_vm._e(),(_vm.active == 5)?_c('div',{staticClass:\"doc-item\"},[_c('div',{staticClass:\"doc-item-title\"},[_vm._v(\"miniblink其他语言绑定及例程\")]),_vm._m(4)]):_vm._e()])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"doc-item-content\"},[_c('p',[_vm._v(\"miniblink使用了wke的接口。wke的相关介绍可以google一下。\")]),_c('p',[_vm._v(\"总的来说，miniblink的接口是纯C导出，只要使用wke.h即可加载。无需.lib。\")]),_c('blockquote',[_c('p',[_vm._v(\"另外，请勿跨线程调用所有接口（除非接口有特殊申明）\")]),_c('p',[_vm._v(\"所有接口如果返回的是const utf8*，const wchar_t*类型的字符串，均不需要手动释放\")]),_c('p',[_vm._v(\"miniblink暂时只支持windows系统\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"doc-item-content\"},[_c('h3',[_vm._v(\"miniblink是什么？\")]),_c('p',[_vm._v(\"Miniblink是一个追求极致小巧的浏览器内核项目，全世界第三大流行的浏览器内核控件。\\n                        \")]),_c('p',[_vm._v(\"其基于chromium最新版内核，去除了chromium所有多余的部件，只保留最基本的排版引擎blink。\")]),_c('p',[_vm._v(\"Miniblink保持了10M左右的极简大小，是所有同类产品最小的体积，同时支持windows xp、npapi。\")]),_c('h3',[_vm._v(\"为什么要做miniblink？\")]),_c('p',[_vm._v(\"市面上作为嵌入的组件的可用的浏览器内核，不外乎这几个：webkit、cef、nwjs、electron。\")]),_c('p',[_vm._v(\"cef：优点是由于集成的chromium内核，所以对H5支持的很全，同时因为使用的人也多，各种教程、示例，资源很多。但缺点很明显，太大了。最新的cef已经夸张到了100多M，还要带一堆的文件。同时新的cef已经不支持xp了（chromium对应版本是M49）。而且由于是多进程架构，对资源的消耗也很夸张。如果只是想做个小软件，一坨文件需要带上、超大的安装包，显然不能忍受。\")]),_c('p',[_vm._v(\"nwjs，或者最近大火的electron：和cef内核类似，都是chromium内核。缺点和cef一模一样。优点是由于可以使用nodejs的资源，同时又自带了各种api的绑定，所以可以用的周边资源非常丰富；而基于js的开发方案，使得前端很容易上手。所以最近N多项目都是基于nwjs或electron来实现。例如vscode，atom等等。\")]),_c('p',[_vm._v(\"原版webkit：现在官网还在更新windows port，但显然漫不在心，而且最新的webkit也很大了，超过20几M。最关键的是，周边资源很少，几乎没人再基于webkit来做开发。同时由于windows版的saferi已经停止开发了，所以用webkit就用不了他的dev tools了。这是个大遗憾。\")]),_c('p',[_vm._v(\"WKE：这是个很老的webkit内核的裁剪版了。小是小，但bug太多了。\")]),_c('h3',[_vm._v(\"那么关键点来了，使用miniblink有啥好处呢？？\")]),_c('p',[_vm._v(\"首先，miniblink对大小要求非常严格。原版chromium、blink里对排版渲染没啥大用的如音视频全都被砍了，只专注于网页的排版和渲染。甚至为了裁剪大小，我不惜使用vc6的crt来跑mininblink(见我上篇文章)。这个也算前无古人后无来者了。\")]),_c('p',[_vm._v(\"其次，miniblink紧跟最新chromium，这意味着chromium相关的资源都可以利用。在未来的规划里，我是打算把electron的接口也加上的，这样可以无缝替换electron。使用miniblink的话，开发调试时用原版electron，发布的时候再替换掉那些dll，直接可以无缝切换，非常方便。\")]),_c('h3',[_vm._v(\"miniblink如何使用？\")]),_c('p',[_vm._v(\"Miniblink导出了electron、WKE的接口，可以直接无缝替换现有的electron、WKE项目。\")]),_c('p',[_vm._v(\"早期miniblink还导出了CEF接口，不过现在已被废弃。\")]),_c('p',[_vm._v(\"miniblink有个小demo，从demo里可以看到，brackct这个基于cef的开源编辑器，已经顺利由miniblink跑起来了。现在electron的接口已做好，vscode跑起来了。\")]),_c('p',[_vm._v(\"更详细的使用文档见本页其他文章。\")]),_c('h3',[_vm._v(\"miniblink如何裁剪到这么小？\")]),_c('p',[_vm._v(\"这个比较复杂了。主要就是把blink从chromium抽离了出来，同时补上了cc层（硬件渲染层）。现在的blink，已经不是当年的那个webkit了，渲染部分全走cc层，复杂无比。我这大半年都在重写他那个蛋疼又复杂的cc层。\")]),_c('h3',[_vm._v(\"和webkit比，miniblink架构有什么优势\")]),_c('p',[_vm._v(\"现在的webkit版本，已经比miniblink落后太多了。blink一直在加入各种极富创造力和想象力的功能、组件。例如，blink早就加入多线程解析html token、blink gc回收器、多线程录制回放渲染机制。这些能让blink的解析渲染速度极大提升。下一次，我会先开源出blink gc组件，这东西很有意思，在c++里硬是搞出了一个垃圾回收机制，能让你像写java一样写c++。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"table-row table-header\"},[_c('div',{staticClass:\"table-col\"},[_vm._v(\"参数名\")]),_c('div',{staticClass:\"table-col\"},[_vm._v(\"说明\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"doc-item-content\"},[_c('h3',[_vm._v(\"mini-electron模式\")]),_c('p',[_vm._v(\"目前miniblink已支持mini-eletcron模式。electron是目前最流行的跨平台PC开发框架，相当于把nodejs和chromium结合起来，可以同时使用两者的功能。（如果不想看废话，需要了解怎么使用的人，可以拉到文末）\")]),_c('p',[_vm._v(\"nodejs使用了v8，而miniblink因为本身就是chromium的blink+v8，所以某天我大胆的猜测，只要加上nodejs的功能，再补上electron为了撮合这几个部件的代码，就可以实现超级精简的electron了。\")]),_c('p',[_vm._v(\"事实证明这样完全没问题，mini-eletcron目前已实现原版electron大约90%的接口。绝大部分electron app已能跑起。\")]),_c('p',[_vm._v(\"mini-eletcron的实现方式很简单，由两部分组成：\")]),_c('p',[_vm._v(\"1，mini-eletcron.exe；\")]),_c('p',[_vm._v(\"2，nodejs.dll；\")]),_c('p',[_vm._v(\"先看mini-electron.exe部分。这是个只有几百K的小exe（原版的electron.exe有大约5-60m）。其目的是调用nodejs.dll导出的接口，以模拟electron的功能。由于原版electron是开源的，所以我直接挪用了很多代码。当然，需要做大量改动。原因有二：一是因为原版代码大量依赖chromium的base、net等基础库，所以不得不对这些代码进行重写；\")]),_c('p',[_vm._v(\"二是将原版使用了chromium的web相关功能，通过调用nodejs.dll提供的接口来实现。\")]),_c('p',[_vm._v(\"其中web相关功能，我巧妙的通过miniblink导出的C接口来实现，而其nodejs相关，我是直接将nodejs的代码完整的编译进了nodejs.dll。\")]),_c('p',[_vm._v(\"所以，这里说到的第二个nodejs.dll部分，其实已经不是网上原版的nodejs.dll了，而是我将miniblink的代码和nodej.dll的代码简单的编译在一个dll中所产生的文件。其中v8部分是共用的。所以仅仅在miniblink的基础上，增加了几M而已。\")]),_c('p',[_vm._v(\"所以，这也解释了为什么每次发出来的编译好的miniblink的包，主dll都叫node.dll。因为需要伪装成nodejs。\")]),_c('p',[_vm._v(\"但mini-electron和原版并不是完全一样。有个最大的不同在于，原版因为chromium的限制，必须使用多进程架构。了解electron使用方式的人都知道，electron分成主进程和渲染进程。其中主进程跑了一个nodejs上下文环境，而每个渲染进程又跑了一个nodejs环境。 主进程同时也是chromium的主进程。主进程的nodejs环境用来调用chromium的content api来实现操纵chromium的web能力。\")]),_c('p',[_vm._v(\"而mini-electron不同， 因为miniblink的架构本身就是单进程，所以为了简单起见，我使用单进程多线程来模拟electron多进程。其中，主线程一个nodejs环境，渲染线程跑一个miniblink的webview。注意，这里只有一个渲染线程，不管有多少个webview。这是blink的架构限制的。同时主线程通过异步的调用miniblink的webview接口（又称为wke接口）来实现操纵web能力。\")]),_c('p',[_vm._v(\"这也就造成了一个技术上的限制：mini-electron不能实现同时加载多个同样的原生dll（在nodejs里，这部分是以\\\".node\\\"结尾的文件）。\")]),_c('p',[_vm._v(\"这是windows的dll加载机制限制。所以对于那些同时在主进程和渲染进程都加载了原生dll的应用，mini-electron会报错。例如vscode就在主进程和渲染进程里都加载了keymap.node。\")]),_c('p',[_vm._v(\"但这个限制是可以通过简单的改造js来绕过的。electron实现了remote功能，可以通过remote.require来指挥主进程去加载dll，并远程使用dll的接口。我就稍微改了下keymap的js，便完美的跑起了vscode。事实上，应该不会有人真的需要两个进程同时使用一个dll。绝大部分情况可以通过remote来规避。\")]),_c('h3',[_vm._v(\"mini-electron有哪些优势\")]),_c('p',[_vm._v(\"先看electron有哪些劣势：\")]),_c('p',[_vm._v(\"1，安装包的大小难以优化，除非你搞明白vscode团队是如何做到的。\")]),_c('p',[_vm._v(\"2，Electron因为需要一份chromium库的拷贝，因此再小的app，内存开销都不少。\")]),_c('p',[_vm._v(\"3，多个Electron运行，是不能共享主进程资源的，也无法做关联性的优化，浏览器是有一套IPC进程做所有调度的。能有开销上的优化。\")]),_c('p',[_vm._v(\"所以，electron的劣势正好就是mini-electron的优势。\")]),_c('p',[_vm._v(\"此外，刚看到PWA也打算进军桌面市场。据我对PWA的了解，它在和mini-electron在上面几个点上并没任何优势，所以，你懂的……\")]),_c('h3',[_vm._v(\"mini-electron有哪些劣势\")]),_c('p',[_vm._v(\"1，目前还有几个模块没支持上，主要是session那块。\")]),_c('p',[_vm._v(\"2，单进程架构限制了无法多次加载同个dll。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"doc-item-content\"},[_c('p',[_vm._v(\"需要说明的是，下面的url很多都是网友提供，非官方编写。所以可能和最新版miniblink不太兼容，出现问题也正常，仅供参考。\")]),_c('h3',[_vm._v(\"C#\")]),_c('p',[_vm._v(\"https://github.com/E024/MiniBlinkPinvoke\")]),_c('p',[_vm._v(\"https://github.com/E024/MiniBlinkPinvokeDemo\")]),_c('p',[_vm._v(\"https://gitee.com/kyozy/miniblinknet\")]),_c('p',[_vm._v(\"https://github.com/e024/miniblinkpinvokevip (这个是定制版的封装)\")]),_c('h3',[_vm._v(\"delphi\")]),_c('p',[_vm._v(\"https://github.com/yangyxd/wke-for-delphi\")]),_c('p',[_vm._v(\"https://gitee.com/LangjiApp/Wke4Delphi.git\")]),_c('h3',[_vm._v(\"SOUI\")]),_c('p',[_vm._v(\"https://gitee.com/Qyerp/KKPlayer/blob/master/KKPlayer/MainPage/KKWkeWebkit.cpp\")]),_c('p',[_vm._v(\"https://github.com/soui-demo/SweepingEdge\")]),_c('h3',[_vm._v(\"golang\")]),_c('p',[_vm._v(\"https://github.com/raintean/blink\")]),_c('h3',[_vm._v(\"C++\")]),_c('p',[_vm._v(\"https://github.com/iceb0y/miniblink_cxx_example\")]),_c('p',[_vm._v(\"https://github.com/weolar/mb-demo\")]),_c('p',[_vm._v(\"https://github.com/zhichao281/duilib-MiniBlinkBrowser\")]),_c('h3',[_vm._v(\"powerbuilder\")]),_c('p',[_vm._v(\"https://github.com/gaoqiangz/pfw\")]),_c('h3',[_vm._v(\"duilib\")]),_c('p',[_vm._v(\"https://github.com/zhichao281/duilib-MiniBlinkBrowser\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"doc-page\">\r\n        <div class=\"container\">\r\n            <div class=\"side-bar\">\r\n                <div class=\"side-bar-wrap\">\r\n                    <div class=\"side-bar-item\" :class=\"{'side-bar-item-active': active == item.id}\" @click=\"active = item.id\" v-for=\"(item, index) in sideNav\" :key=\"index\">{{item.title}}</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"body\">\r\n                <div class=\"body-wrap\">\r\n                    <!-- 前言 -->\r\n                    <div class=\"doc-item\" v-if=\"active == 1\">\r\n                        <div class=\"doc-item-title\">前言</div>\r\n                        <div class=\"doc-item-content\">\r\n                            <p>miniblink使用了wke的接口。wke的相关介绍可以google一下。</p>\r\n                            <p>总的来说，miniblink的接口是纯C导出，只要使用wke.h即可加载。无需.lib。</p>\r\n                            <blockquote>\r\n                                <p>另外，请勿跨线程调用所有接口（除非接口有特殊申明）</p>\r\n                                <p>所有接口如果返回的是const utf8*，const wchar_t*类型的字符串，均不需要手动释放</p>\r\n                                <p>miniblink暂时只支持windows系统</p>\r\n                            </blockquote>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- miniblink是什么 -->\r\n                    <div class=\"doc-item\" v-if=\"active == 2\">\r\n                        <div class=\"doc-item-title\">Miniblink是什么</div>\r\n                        <div class=\"doc-item-content\">\r\n                            <h3>miniblink是什么？</h3>\r\n                            <p>Miniblink是一个追求极致小巧的浏览器内核项目，全世界第三大流行的浏览器内核控件。\r\n                            <p>其基于chromium最新版内核，去除了chromium所有多余的部件，只保留最基本的排版引擎blink。</p>\r\n                            <p>Miniblink保持了10M左右的极简大小，是所有同类产品最小的体积，同时支持windows xp、npapi。</p>\r\n                        \r\n                            <h3>为什么要做miniblink？</h3>\r\n                            <p>市面上作为嵌入的组件的可用的浏览器内核，不外乎这几个：webkit、cef、nwjs、electron。</p>\r\n                            <p>cef：优点是由于集成的chromium内核，所以对H5支持的很全，同时因为使用的人也多，各种教程、示例，资源很多。但缺点很明显，太大了。最新的cef已经夸张到了100多M，还要带一堆的文件。同时新的cef已经不支持xp了（chromium对应版本是M49）。而且由于是多进程架构，对资源的消耗也很夸张。如果只是想做个小软件，一坨文件需要带上、超大的安装包，显然不能忍受。</p>\r\n                            <p>nwjs，或者最近大火的electron：和cef内核类似，都是chromium内核。缺点和cef一模一样。优点是由于可以使用nodejs的资源，同时又自带了各种api的绑定，所以可以用的周边资源非常丰富；而基于js的开发方案，使得前端很容易上手。所以最近N多项目都是基于nwjs或electron来实现。例如vscode，atom等等。</p>\r\n                            <p>原版webkit：现在官网还在更新windows port，但显然漫不在心，而且最新的webkit也很大了，超过20几M。最关键的是，周边资源很少，几乎没人再基于webkit来做开发。同时由于windows版的saferi已经停止开发了，所以用webkit就用不了他的dev tools了。这是个大遗憾。</p>\r\n                            <p>WKE：这是个很老的webkit内核的裁剪版了。小是小，但bug太多了。</p>\r\n                        \r\n                            <h3>那么关键点来了，使用miniblink有啥好处呢？？</h3>\r\n                            <p>首先，miniblink对大小要求非常严格。原版chromium、blink里对排版渲染没啥大用的如音视频全都被砍了，只专注于网页的排版和渲染。甚至为了裁剪大小，我不惜使用vc6的crt来跑mininblink(见我上篇文章)。这个也算前无古人后无来者了。</p>\r\n                            <p>其次，miniblink紧跟最新chromium，这意味着chromium相关的资源都可以利用。在未来的规划里，我是打算把electron的接口也加上的，这样可以无缝替换electron。使用miniblink的话，开发调试时用原版electron，发布的时候再替换掉那些dll，直接可以无缝切换，非常方便。</p>\r\n                            \r\n                            <h3>miniblink如何使用？</h3>\r\n                            <p>Miniblink导出了electron、WKE的接口，可以直接无缝替换现有的electron、WKE项目。</p>\r\n                            <p>早期miniblink还导出了CEF接口，不过现在已被废弃。</p>\r\n                            <p>miniblink有个小demo，从demo里可以看到，brackct这个基于cef的开源编辑器，已经顺利由miniblink跑起来了。现在electron的接口已做好，vscode跑起来了。</p>\r\n                            <p>更详细的使用文档见本页其他文章。</p>\r\n                            \r\n                            <h3>miniblink如何裁剪到这么小？</h3>\r\n                            <p>这个比较复杂了。主要就是把blink从chromium抽离了出来，同时补上了cc层（硬件渲染层）。现在的blink，已经不是当年的那个webkit了，渲染部分全走cc层，复杂无比。我这大半年都在重写他那个蛋疼又复杂的cc层。</p>\r\n                            \r\n                            <h3>和webkit比，miniblink架构有什么优势</h3>\r\n                            <p>现在的webkit版本，已经比miniblink落后太多了。blink一直在加入各种极富创造力和想象力的功能、组件。例如，blink早就加入多线程解析html token、blink gc回收器、多线程录制回放渲染机制。这些能让blink的解析渲染速度极大提升。下一次，我会先开源出blink gc组件，这东西很有意思，在c++里硬是搞出了一个垃圾回收机制，能让你像写java一样写c++。</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- api -->\r\n                    <div class=\"doc-item\" v-if=\"active == 3\">\r\n                        <div class=\"doc-item-title\">API</div>\r\n                        <div class=\"doc-item-content\">\r\n                            <div class=\"api-list\">\r\n                                <div class=\"api-list-item\" v-for=\"(item, index) in apis\" :key=\"index\">\r\n                                    <h3 v-if=\"item.del\" style=\"color:#ff2400;\"><del>[{{item.id}}] {{item.title}}</del> （已作废）</h3>\r\n                                    <h3 v-else>[{{item.id}}] {{item.title}}</h3>\r\n                                    <p>{{item.desc ? item.desc : '暂无接口描述信息'}}</p>\r\n                                    <div class=\"table params\" v-if=\"Object.keys(item.params).length > 0\">\r\n                                        <div class=\"table-row table-header\">\r\n                                            <div class=\"table-col\">参数名</div>\r\n                                            <div class=\"table-col\">说明</div>\r\n                                        </div>\r\n                                        <div class=\"table-row\" v-for=\"(value, key, index2) in item.params\" :key=\"index2\">\r\n                                            <div class=\"table-col\">{{key}}</div>\r\n                                            <div class=\"table-col\">{{value}}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <blockquote v-if=\"item.tips\" class=\"api-tips\">{{item.tips}}</blockquote>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- mini-electron介绍 -->\r\n                    <div class=\"doc-item\" v-if=\"active == 4\">\r\n                        <div class=\"doc-item-title\">mini-electron模式</div>\r\n                        <div class=\"doc-item-content\">\r\n                            <h3>mini-electron模式</h3>\r\n                            <p>目前miniblink已支持mini-eletcron模式。electron是目前最流行的跨平台PC开发框架，相当于把nodejs和chromium结合起来，可以同时使用两者的功能。（如果不想看废话，需要了解怎么使用的人，可以拉到文末）</p>\r\n                            <p>nodejs使用了v8，而miniblink因为本身就是chromium的blink+v8，所以某天我大胆的猜测，只要加上nodejs的功能，再补上electron为了撮合这几个部件的代码，就可以实现超级精简的electron了。</p>\r\n                            <p>事实证明这样完全没问题，mini-eletcron目前已实现原版electron大约90%的接口。绝大部分electron app已能跑起。</p>\r\n                            <p>mini-eletcron的实现方式很简单，由两部分组成：</p>\r\n                            <p>1，mini-eletcron.exe；</p>\r\n                            <p>2，nodejs.dll；</p>\r\n                            <p>先看mini-electron.exe部分。这是个只有几百K的小exe（原版的electron.exe有大约5-60m）。其目的是调用nodejs.dll导出的接口，以模拟electron的功能。由于原版electron是开源的，所以我直接挪用了很多代码。当然，需要做大量改动。原因有二：一是因为原版代码大量依赖chromium的base、net等基础库，所以不得不对这些代码进行重写；</p>\r\n                            <p>二是将原版使用了chromium的web相关功能，通过调用nodejs.dll提供的接口来实现。</p>\r\n                            <p>其中web相关功能，我巧妙的通过miniblink导出的C接口来实现，而其nodejs相关，我是直接将nodejs的代码完整的编译进了nodejs.dll。</p>\r\n                            <p>所以，这里说到的第二个nodejs.dll部分，其实已经不是网上原版的nodejs.dll了，而是我将miniblink的代码和nodej.dll的代码简单的编译在一个dll中所产生的文件。其中v8部分是共用的。所以仅仅在miniblink的基础上，增加了几M而已。</p>\r\n                            <p>所以，这也解释了为什么每次发出来的编译好的miniblink的包，主dll都叫node.dll。因为需要伪装成nodejs。</p>\r\n                            <p>但mini-electron和原版并不是完全一样。有个最大的不同在于，原版因为chromium的限制，必须使用多进程架构。了解electron使用方式的人都知道，electron分成主进程和渲染进程。其中主进程跑了一个nodejs上下文环境，而每个渲染进程又跑了一个nodejs环境。 主进程同时也是chromium的主进程。主进程的nodejs环境用来调用chromium的content api来实现操纵chromium的web能力。</p>\r\n                            <p>而mini-electron不同， 因为miniblink的架构本身就是单进程，所以为了简单起见，我使用单进程多线程来模拟electron多进程。其中，主线程一个nodejs环境，渲染线程跑一个miniblink的webview。注意，这里只有一个渲染线程，不管有多少个webview。这是blink的架构限制的。同时主线程通过异步的调用miniblink的webview接口（又称为wke接口）来实现操纵web能力。</p>\r\n                            <p>这也就造成了一个技术上的限制：mini-electron不能实现同时加载多个同样的原生dll（在nodejs里，这部分是以\".node\"结尾的文件）。</p>\r\n                            <p>这是windows的dll加载机制限制。所以对于那些同时在主进程和渲染进程都加载了原生dll的应用，mini-electron会报错。例如vscode就在主进程和渲染进程里都加载了keymap.node。</p>\r\n                            <p>但这个限制是可以通过简单的改造js来绕过的。electron实现了remote功能，可以通过remote.require来指挥主进程去加载dll，并远程使用dll的接口。我就稍微改了下keymap的js，便完美的跑起了vscode。事实上，应该不会有人真的需要两个进程同时使用一个dll。绝大部分情况可以通过remote来规避。</p>\r\n                            \r\n                            <h3>mini-electron有哪些优势</h3>\r\n                            <p>先看electron有哪些劣势：</p>\r\n                            <p>1，安装包的大小难以优化，除非你搞明白vscode团队是如何做到的。</p>\r\n                            <p>2，Electron因为需要一份chromium库的拷贝，因此再小的app，内存开销都不少。</p>\r\n                            <p>3，多个Electron运行，是不能共享主进程资源的，也无法做关联性的优化，浏览器是有一套IPC进程做所有调度的。能有开销上的优化。</p>\r\n                            <p>所以，electron的劣势正好就是mini-electron的优势。</p>\r\n                            <p>此外，刚看到PWA也打算进军桌面市场。据我对PWA的了解，它在和mini-electron在上面几个点上并没任何优势，所以，你懂的……</p>\r\n                            \r\n                            <h3>mini-electron有哪些劣势</h3>\r\n                            <p>1，目前还有几个模块没支持上，主要是session那块。</p>\r\n                            <p>2，单进程架构限制了无法多次加载同个dll。</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- miniblink其他语言绑定及例程 -->\r\n                    <div class=\"doc-item\" v-if=\"active == 5\">\r\n                        <div class=\"doc-item-title\">miniblink其他语言绑定及例程</div>\r\n                        <div class=\"doc-item-content\">\r\n                            <p>需要说明的是，下面的url很多都是网友提供，非官方编写。所以可能和最新版miniblink不太兼容，出现问题也正常，仅供参考。</p>\r\n                            <h3>C#</h3>\r\n                            <p>https://github.com/E024/MiniBlinkPinvoke</p>\r\n                            <p>https://github.com/E024/MiniBlinkPinvokeDemo</p>\r\n                            <p>https://gitee.com/kyozy/miniblinknet</p>\r\n                            <p>https://github.com/e024/miniblinkpinvokevip (这个是定制版的封装)</p>\r\n\r\n                            <h3>delphi</h3>\r\n                            <p>https://github.com/yangyxd/wke-for-delphi</p>\r\n                            <p>https://gitee.com/LangjiApp/Wke4Delphi.git</p>\r\n\r\n                            <h3>SOUI</h3>\r\n                            <p>https://gitee.com/Qyerp/KKPlayer/blob/master/KKPlayer/MainPage/KKWkeWebkit.cpp</p>\r\n                            <p>https://github.com/soui-demo/SweepingEdge</p>\r\n\r\n                            <h3>golang</h3>\r\n                            <p>https://github.com/raintean/blink</p>\r\n\r\n                            <h3>C++</h3>\r\n                            <p>https://github.com/iceb0y/miniblink_cxx_example</p>\r\n                            <p>https://github.com/weolar/mb-demo</p>\r\n                            <p>https://github.com/zhichao281/duilib-MiniBlinkBrowser</p>\r\n\r\n                            <h3>powerbuilder</h3>\r\n                            <p>https://github.com/gaoqiangz/pfw</p>\r\n\r\n                            <h3>duilib</h3>\r\n                            <p>https://github.com/zhichao281/duilib-MiniBlinkBrowser</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data(){\r\n        return {\r\n            active: 3,\r\n            sideNav: [\r\n                {id: 1, title: '前言'},\r\n                {id: 2, title: 'Miniblink是什么'},\r\n                {id: 3, title: 'API'},\r\n                {id: 4, title: 'mini-electron介绍'},\r\n                {id: 5, title: '其他语言绑定及例程'}\r\n            ],\r\n            apis: []\r\n        }\r\n    },\r\n    async created(){\r\n        let data = await axios('/db.json')\r\n        this.apis = data.api\r\n        console.log(this.apis)\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#doc-page{\r\n    margin: 15px 0;\r\n    /* animation: fade-up-to-down 0.8s; */\r\n}\r\n#doc-page .container{\r\n    display: flex;\r\n}\r\n.side-bar{\r\n    width:230px;\r\n}\r\n.side-bar-item{\r\n    padding:0 10px;\r\n    font-size:14px;\r\n    line-height: 35px;\r\n    cursor: pointer;\r\n    border-bottom:1px solid #f5f5f5;\r\n    color:#666;\r\n}\r\n.side-bar-item-active{\r\n    background: #20232a;\r\n    color:#fff;\r\n}\r\n.side-bar-item:last-child{\r\n    border:0;\r\n}\r\n.side-bar-wrap{\r\n    width:100%;\r\n    background: #fff;\r\n    box-shadow: 0 2px 2px 2px #f5f5f5;\r\n}\r\n.body{\r\n    flex:1;\r\n    padding:0 10px;\r\n}\r\n.body-wrap{\r\n    background: #fff;\r\n    padding:10px;\r\n    min-height:800px;\r\n    box-shadow: 0 2px 2px 2px #f5f5f5;\r\n}\r\n.doc-item{\r\n    margin: 50px 0 0 0;\r\n    /* background: red; */\r\n}\r\n.doc-item:first-child{\r\n    margin: 0;\r\n}\r\n.doc-item-title{\r\n    padding:5px 0 20px 0;\r\n    font-size:24px;\r\n    text-align: center;\r\n    color:#444;\r\n    border-bottom:1px solid #f5f5f5;\r\n}\r\n.doc-item-content{\r\n    font-size:15px;\r\n    margin: 10px 0 0 0;\r\n    color:#333;\r\n    line-height: 25px;\r\n}\r\n.doc-item-content h3{\r\n    margin:20px 0 10px 0;\r\n}\r\n.doc-item-content p{\r\n    margin:10px 0;\r\n    color:#666;\r\n}\r\n.doc-item-content blockquote p{\r\n    color:inherit;\r\n}\r\n\r\n.api-list-item{\r\n    /* background: red; */\r\n    padding:10px;\r\n    margin: 10px 0;\r\n    border-bottom:1px solid #eee;\r\n}\r\n.api-list-item h3{\r\n    margin:0;\r\n}\r\n\r\n.table{\r\n    /* width:500px; */\r\n    border:1px solid #f5f5f5;\r\n    border-bottom:0;\r\n    color:#888;\r\n}\r\n.table-row{\r\n    display: flex;\r\n    font-size:14px;\r\n    border-bottom:1px solid #f5f5f5;\r\n}\r\n.table-col{\r\n    padding:5px;\r\n    border-right:1px solid #f5f5f5;\r\n}\r\n.table-col:first-child{\r\n    width:15%;\r\n    text-align: center;\r\n}\r\n.table-col:last-child{\r\n    flex:1;\r\n}\r\n.table-header{\r\n    font-weight: bold;\r\n    text-align: center;\r\n    color:#666;\r\n}\r\n\r\n\r\n@media screen and (max-width: 800px){\r\n    #doc-page{\r\n        margin:5px 0;\r\n    }\r\n    #doc-page .container{\r\n        flex-wrap: wrap;\r\n        padding:10px;\r\n    }\r\n    .side-bar{\r\n        width:100%;\r\n    }\r\n    .body{\r\n        padding:0;\r\n        margin:10px 0 0 0;\r\n        width:100%;\r\n    }\r\n    .table-col:first-child{\r\n        width:80px !important;\r\n\r\n    }\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Doc.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Doc.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Doc.vue?vue&type=template&id=440ee316&scoped=true&\"\nimport script from \"./Doc.vue?vue&type=script&lang=js&\"\nexport * from \"./Doc.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Doc.vue?vue&type=style&index=0&id=440ee316&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"440ee316\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}